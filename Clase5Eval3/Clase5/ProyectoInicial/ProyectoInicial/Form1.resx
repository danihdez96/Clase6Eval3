<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>